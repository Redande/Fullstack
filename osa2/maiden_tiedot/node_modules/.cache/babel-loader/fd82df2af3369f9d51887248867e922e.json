{"ast":null,"code":"var _jsxFileName = \"/mnt/BA00603F0060052B/Fullstack/osa2/maiden_tiedot/src/components/Country.jsx\";\nimport React from \"react\";\nimport countryService from \"../services/countryService\";\n\nvar Country = function Country(_ref) {\n  var country = _ref.country;\n  var weatherInCapital = countryService.getCapitalWeather(country.capital).then(function () {\n    return console.log(\"success\");\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, country.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"capital \", country.capital), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"population \", country.population), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"languages\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, country.languages.map(function (lang) {\n    return React.createElement(\"li\", {\n      key: lang.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, lang.name);\n  })), React.createElement(\"img\", {\n    src: country.flag,\n    height: \"20%\",\n    width: \"20%\",\n    alt: \"the country's flag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Weather in \", country.capital), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"temperature \", weatherInCapital.temp_c), React.createElement(\"img\", {\n    src: weatherInCapital.condition.icon.substr(2),\n    alt: weatherInCapital.condition.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nexport default Country;","map":{"version":3,"sources":["/mnt/BA00603F0060052B/Fullstack/osa2/maiden_tiedot/src/components/Country.jsx"],"names":["React","countryService","Country","country","weatherInCapital","getCapitalWeather","capital","then","console","log","name","population","languages","map","lang","flag","temp_c","condition","icon","substr","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/B,MAAMC,gBAAgB,GAAGH,cAAc,CACpCI,iBADsB,CACJF,OAAO,CAACG,OADJ,EAEtBC,IAFsB,CAEjB;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,GAFiB,CAAzB;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,OAAO,CAACO,IAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYP,OAAO,CAACG,OAApB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeH,OAAO,CAACQ,UAAvB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACS,SAAR,CAAkBC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBI,IAAI,CAACJ,IAA1B,CADyB;AAAA,GAA1B,CADH,CALF,EAUE;AACE,IAAA,GAAG,EAAEP,OAAO,CAACY,IADf;AAEE,IAAA,MAAM,EAAC,KAFT;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,GAAG,EAAC,oBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBZ,OAAO,CAACG,OAAxB,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBF,gBAAgB,CAACY,MAAjC,CAjBF,EAkBE;AAAK,IAAA,GAAG,EAAEZ,gBAAgB,CAACa,SAAjB,CAA2BC,IAA3B,CAAgCC,MAAhC,CAAuC,CAAvC,CAAV;AAAqD,IAAA,GAAG,EAAEf,gBAAgB,CAACa,SAAjB,CAA2BG,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CA1BD;;AA4BA,eAAelB,OAAf","sourcesContent":["import React from \"react\";\nimport countryService from \"../services/countryService\";\n\nconst Country = ({ country }) => {\n  const weatherInCapital = countryService\n    .getCapitalWeather(country.capital)\n    .then(() => console.log(\"success\"));\n  return (\n    <div>\n      <h1>{country.name}</h1>\n      <p>capital {country.capital}</p>\n      <p>population {country.population}</p>\n      <h2>languages</h2>\n      <ul>\n        {country.languages.map(lang => (\n          <li key={lang.name}>{lang.name}</li>\n        ))}\n      </ul>\n      <img\n        src={country.flag}\n        height=\"20%\"\n        width=\"20%\"\n        alt=\"the country's flag\"\n      />\n      <h2>Weather in {country.capital}</h2>\n      <p>temperature {weatherInCapital.temp_c}</p>\n      <img src={weatherInCapital.condition.icon.substr(2)} alt={weatherInCapital.condition.text} />\n    </div>\n  );\n};\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}