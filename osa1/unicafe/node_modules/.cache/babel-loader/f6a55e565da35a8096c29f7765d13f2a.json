{"ast":null,"code":"import _slicedToArray from \"/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nvar Button = function Button(_ref) {\n  var name = _ref.name,\n      setCount = _ref.setCount,\n      count = _ref.count;\n  return React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, name);\n};\n\nvar Statistic = function Statistic(_ref2) {\n  var text = _ref2.text,\n      value = _ref2.value;\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, text), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, value));\n};\n\nvar Statistics = function Statistics(_ref3) {\n  var good = _ref3.good,\n      neutral = _ref3.neutral,\n      bad = _ref3.bad;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"statistiikka\"), good === neutral && good === bad && good === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Ei yht\\xE4\\xE4n palautetta annettu\") : React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    text: \"hyv\\xE4\",\n    value: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"neutraali\",\n    value: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"neutraali\",\n    value: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"huono\",\n    value: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"yhteens\\xE4\",\n    value: good + neutral + bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"keskiarvo\",\n    value: (good - bad) / (good + neutral + bad),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"positiivisia\",\n    value: \"\".concat(good / (good + neutral + bad) * 100, \" %\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nvar App = function App() {\n  // tallenna napit omaan tilaansa\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      good = _useState2[0],\n      setGood = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      neutral = _useState4[0],\n      setNeutral = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bad = _useState6[0],\n      setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"anna palautetta\"), React.createElement(Button, {\n    name: \"hyv\\xE4\",\n    setCount: setGood,\n    count: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"neutraali\",\n    setCount: setNeutral,\n    count: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"huono\",\n    setCount: setBad,\n    count: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","name","setCount","count","Statistic","text","value","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = ({ name, setCount, count }) => (\n  <button onClick={() => setCount(count + 1)}>{name}</button>\n);\n\nconst Statistic = ({ text, value }) => (\n  <tr>\n    <td>{text}</td>\n    <td>{value}</td>\n  </tr>\n);\n\nconst Statistics = ({ good, neutral, bad }) => {\n  return (\n    <div>\n      <h1>statistiikka</h1>\n      {good === neutral && good === bad && good === 0 ? (\n        <p>Ei yhtään palautetta annettu</p>\n      ) : (\n        <table>\n          <tbody>\n          <Statistic text=\"hyvä\" value={good} />\n          <Statistic text=\"neutraali\" value={neutral} />\n          <Statistic text=\"neutraali\" value={neutral} />\n          <Statistic text=\"huono\" value={bad} />\n          <Statistic text=\"yhteensä\" value={good + neutral + bad} />\n          <Statistic\n            text=\"keskiarvo\"\n            value={(good - bad) / (good + neutral + bad)}\n          />\n          <Statistic\n            text=\"positiivisia\"\n            value={`${(good / (good + neutral + bad)) * 100} %`}\n          />\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <div>\n      <h1>anna palautetta</h1>\n      <Button name=\"hyvä\" setCount={setGood} count={good} />\n      <Button name=\"neutraali\" setCount={setNeutral} count={neutral} />\n      <Button name=\"huono\" setCount={setBad} count={bad} />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}