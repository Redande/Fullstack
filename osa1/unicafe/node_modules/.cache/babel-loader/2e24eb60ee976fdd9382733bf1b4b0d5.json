{"ast":null,"code":"import _slicedToArray from \"/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nvar Statistics = function Statistics(_ref) {\n  var good = _ref.good,\n      neutral = _ref.neutral,\n      bad = _ref.bad;\n  console.log(good === neutral === bad === 0);\n  console.log(good === neutral);\n  console.log(good === bad);\n  console.log(good === 0);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"statistiikka\"), good === neutral === bad === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Ei yht\\xE4\\xE4n palautetta annettu\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"hyv\\xE4 \", good), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"neutraali \", neutral), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"huono \", bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"yhteens\\xE4 \", good + neutral + bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"keskiarvo \", (good - bad) / (good + neutral + bad)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"positiivisia \", good / (good + neutral + bad) * 100, \" %\")));\n};\n\nvar App = function App() {\n  // tallenna napit omaan tilaansa\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      good = _useState2[0],\n      setGood = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      neutral = _useState4[0],\n      setNeutral = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bad = _useState6[0],\n      setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"anna palautetta\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setGood(good + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"hyv\\xE4\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setNeutral(neutral + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"neutraali\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setBad(bad + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"huono\"), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/mnt/BA00603F0060052B/Fullstack/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","console","log","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Statistics = ({ good, neutral, bad }) => {\n  console.log(((good === neutral) === bad) === 0)\n  console.log(good === neutral)\n  console.log(good === bad)\n  console.log(good === 0)\n  return (\n    <div>\n      <h1>statistiikka</h1>\n      {((good === neutral) === bad) === 0 ? (\n        <p>Ei yhtään palautetta annettu</p>\n      ) : (\n        <div>\n          <p>hyvä {good}</p>\n          <p>neutraali {neutral}</p>\n          <p>huono {bad}</p>\n          <p>yhteensä {good + neutral + bad}</p>\n          <p>keskiarvo {(good - bad) / (good + neutral + bad)}</p>\n          <p>positiivisia {(good / (good + neutral + bad)) * 100} %</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <div>\n      <h1>anna palautetta</h1>\n      <button onClick={() => setGood(good + 1)}>hyvä</button>\n      <button onClick={() => setNeutral(neutral + 1)}>neutraali</button>\n      <button onClick={() => setBad(bad + 1)}>huono</button>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}